plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "2.0.0"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"monkeyconfig" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	runs {
		testmodClient {
			client()
			name = "Testmod Client"
			source sourceSets.testmod
		}
		testmodServer {
			server()
			name = "Testmod Server"
			source sourceSets.testmod
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	include(implementation("com.electronwill.night-config:core:${project.night_config_version}"))
	include(implementation("com.electronwill.night-config:toml:${project.night_config_version}"))
	include(implementation("com.electronwill.night-config:json:${project.night_config_version}"))
	include(implementation("com.electronwill.night-config:yaml:${project.night_config_version}"))
	include(implementation("com.electronwill.night-config:hocon:${project.night_config_version}"))

	testmodImplementation(sourceSets.main.output)
	testmodImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testmodRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 21
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	repositories {
		maven {
			name = "enjaraiMaven"
			url = "https://maven.enjarai.dev/releases"
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}

	publications {
		mavenJava(MavenPublication) {
			groupId = group
			artifactId = archivesBaseName
			version = version

			from components.java
		}
	}
}